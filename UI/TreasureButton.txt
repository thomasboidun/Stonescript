var locationIds = ［
  ＂rocky_plateau＂,
  ＂deadwood_valley＂,
  ＂caustic_caves＂, 
  ＂fungus_forest＂,
  ＂undead_crypt＂,
  ＂bronze_mine＂, 
  ＂icy_ridge＂, 
  ＂temple＂
］

var treasureart = ascii
#___
├─o─┤
└───┘
asciiend

var treasureButton = null
var treasureButtonX = 1
var treasureButtonY = 6

var treasurePanel = null
var treasurePanelVisible = false
var treasureText = null

? (loc.begin | loc.loop) &
^ locationIds.Contains(loc.id)
  treasureButton = DrawTreasureButton()
  treasurePanel = DrawTreasurePanel()
  treasureText = treasurePanel.children［0］

? treasurePanel & treasurePanel.visible
  treasureText.text = GetTreasureText()


func DrawTreasureButton()
  var p = ui.AddPanel()
  p.anchor = ＂top_left＂
  p.dock = ＂top_left＂
  p.visible = true
  p.color = #888
  p.style = 1
  p.w = 9
  p.h = 5
  p.x = treasureButtonX
  p.y = treasureButtonY

  var b = ui.AddButton()
  b.anchor = ＂center_center＂
  b.dock = ＂center_center＂
  b.visible = ＂inherit＂
  b.style = 1
  b.text = ＂＂
  b.w = 9
  b.h = 5
  b.SetDown(ShowTreasurePanel)
  p.Add(b)

  var a = ui.AddAnim(treasureart)
  a.anchor = ＂center_center＂
  a.dock = ＂center_center＂
  a.visible = ＂inherit＂
  a.color = ＂#white＂
  p.Add(a)

  return p


func ShowTreasurePanel()
  treasurePanel.visible = !treasurePanel.visible
  treasurePanelVisible = treasurePanel.visible

func DrawTreasurePanel()
  var p = ui.AddPanel()
  p.anchor = ＂top_left＂
  p.dock = ＂top_left＂
  p.color = ＂#888＂
  p.visible = treasurePanelVisible
  p.w = 25
  p.h = 5
  p.x = treasureButton.x + treasureButton.w
  p.y = treasureButton.y

  var t = ui.AddText()
  t.anchor = ＂center_center＂
  t.dock = ＂center_center＂
  t.visible = ＂inherit＂
  t.w = 25
  t.h = 3
  t.align = ＂center＂
  p.Add(t)

  return p


func GetTreasureText()
  var lines = ［］
  var text = ＂＂
  var template = ＂＂

  var count = item.GetTreasureCount()
  var limit = item.GetTreasureLimit()

  lines.Add(count + ＂/＂ + limit)

  ? count = limit
    text = ＂Max treasure limit reached!＂
    lines.Add(text)
    text = string.Join(＂\n＂, lines)

    template = ＂［color=#red］｛0｝［/color］＂
    return string.Format(template, text)

  ? count > 0
    template = ＂［color=#yellow］｛0｝［/color］＂
    lines［0］ = string.Format(template, lines［0］)

  text = ＂Full inventory in:＂
  template = ＂［color=#888］｛0｝［/color］＂
  lines.Add(string.Format(template, text))

  var treasureLeft = limit - count
  var frames = treasureLeft * loc.averagetime
  var frameLeft = frames - totaltime
  var timeLeft = FramesToTime(frameLeft)
  lines.Add(timeLeft)

  return string.Join(＂\n＂, lines)


func FramesToTime(frames)
  ? frames = 0
    return ＂-＂

  var frameRate = 30

  var totalSeconds = frames / frameRate
  var f = frames % frameRate
  var s = totalSeconds % 60
  var totalMinutes = totalSeconds / 60
  var m = totalMinutes % 60
  var h = totalMinutes / 60

  ? f < 10
    f = ＂0＂ + f
  ? s < 10
    s = ＂0＂ + s
  ? m < 10
    m = ＂0＂ + m

  var t = ＂＂

  ? h ! 0
    t += h + ＂h＂
    t += m + ＂m＂
    t += s + ＂s＂
    t += f + ＂f＂

  ? h = 0 & m ! ＂00＂
    t += m + ＂m＂
    t += s + ＂s＂
    t += f + ＂f＂

  ? h = 0 & m = ＂00＂ & s ! ＂00＂
    t += s + ＂s＂
    t += f + ＂f＂

  ? h = 0 & m = ＂00＂ & s = ＂00＂ & f ! ＂00＂
    t += f + ＂f＂

  return t
