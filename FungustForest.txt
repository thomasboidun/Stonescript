var voidweaverIsInvoked

// Angry Shroom
var punchCounter
var punchCounterLimit
var punchStartingFrames
var punchHitFrame
var punchRecoveryFrames
var shootCounter
var shootCounterLimit
var shootStartingFrames
var shootHitFrame
var shootRecoveryFrames

var check

? loc.begin | loc.loop
  // Set initial values
  voidweaverIsInvoked = false
  ? loc = fungus_forest
    punchCounter = 0
    punchCounterLimit = 1
    punchStartingFrames = 58
    punchHitFrame = 59
    punchRecoveryFrames = 39
    shootCounter = 0
    shootCounterLimit = 3
    shootStartingFrames = 6
    shootHitFrame = 7
    shootRecoveryFrames = 7
    ? loc.stars >= 4
      punchStartingFrames = 48
      punchHitFrame = 49
      punchRecoveryFrames = 29
      shootCounterLimit = 5
    ? loc.stars >= 5 & loc.stars <= 10
      shootStartingFrames = 8
      shootHitFrame = 9
      shootRecoveryFrames = 9

? !voidweaverIsInvoked
  // Invoke Voidweaver
  equipL aether talisman
  equipR compound
  ? item.CanActivate("aether_talisman")
    activate L
  ? item.CanActivate("voidweaver")
    voidweaverIsInvoked = true

? voidweaverIsInvoked
  // Walk faster
  equipL triskelion
  equipR compound
  ? pickup.distance <= 10
    equipR star

  ? loc = fungus_forest
    ? foe.distance <= 22
      equipL wand poison dp
      equipR wand poison D

    ? foe.distance <= 7
      equip heavy hammer

    // Dodging Mr.Puff's explosion
    ? foe = explode & 
    ^ foe.distance <= 4 & 
    ^ item.GetCooldown("mind") <= 0
      equipL mind

    ? foe = Angry Shroom
      equipL star
      equipR compound

      // On punch starting frames
      ? foe.state = 32 & 
      ^ foe.time <= punchStartingFrames & 
      ^ punchCounter < punchCounterLimit &
      ^ shootCounter = 0
        >Punch starting frames

      // On punch hit frame
      ? foe.state = 32 &
      ^ foe.time = punchHitFrame &
      ^ punchCounter < punchCounterLimit &
      ^ shootCounter = 0
        >Punch hit frame
        punchCounter++

      // On punch recovery frames
      ? foe.state = 33 & 
      ^ foe.time <= punchRecoveryFrames &
      ^ punchCounter <= punchCounterLimit &
      ^ shootCounter = 0
        >Punch recovery frames

      // On shoot starting frames
      ? foe.state = 32 &
      ^ foe.time <= shootStartingFrames &
      ^ punchCounter = punchCounterLimit &
      ^ shootCounter < shootCounterLimit
        >Shoot starting frames

      // On shoot hit frame
      ? foe.state = 32 &
      ^ foe.time = shootHitFrame &
      ^ punchCounter = punchCounterLimit &
      ^ shootCounter < shootCounterLimit
        >Shoot hit frame
        shootCounter++

      // On shoot recovery frames
      ? foe.state = 33 &
      ^ foe.time <= shootRecoveryFrames &
      ^ punchCounter = punchCounterLimit &
      ^ shootCounter <= shootCounterLimit
        >Shoot recovery frames

      // Reset counter
      ? foe.state = 33 &
      ^ foe.time = shootRecoveryFrames &
      ^ punchCounter = punchCounterLimit &
      ^ shootCounter = shootCounterLimit
        punchCounter = 0
        shootCounter = 0
      
