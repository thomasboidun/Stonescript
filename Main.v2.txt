/* Maximum number of characters per line: 49 */

disable hud r

// import Cosmetics/PetBoo
// import Cosmetics/PetSpider
// import Cosmetics/Hats/Skully
// import Cosmetics/Hats/Helmet

var toBegin = false
var then = false
var finally = false

var voidweaverIsInvoked = false

func Init()
  >Init function works!
  toBegin = false
  then = false
  finally = false

  voidweaverIsInvoked = false
// End of Init function.

? loc.begin | loc.loop
  Init()

func Cooldown(cooldownId)
  return item.GetCooldown(cooldownId)

func Get(matrix, searchKey)
  var count = matrix.Count()
  for i = 0 .. count - 1
    var k = matrix[i][0]
    var v = matrix[i][1]
    ? string.Equals(k, searchKey)
      return v
  return none
// end of Get function.

func Set(matrix, keyName, value)
  var count = matrix.Count()
  for i = 0 .. count - 1
    var k = matrix[i][0]
    ? string.Equals(p, prop)
      matrix.Emplace(i, [keyName, value])
      return
  matrix.Add([keyName, value])
  return

func InvokeVoidweaver()
  >InvokeVoidweaver function works!
  ? voidweaverIsInvoked = false
    equip aether_talisman
    ? item.CanActivate("aether_talisman")
      activate aether_talisman
    ? item.CanActivate("voidweaver")
      voidweaverIsInvoked = true
// End of InvokeVoidweaver function.

func ToBegin()
  >ToBegin function works!
  InvokeVoidweaver()
  ? voidweaverIsInvoked = true
    toBegin = true
// End of ToBegin function.

func RockyPlateau()
  >RockyPlateau function works!
// End of RockyPlateau function.

func DeadwoodValley()
  >DeadwoodValley function works!
// End of DeadwoodValley function.

func CausticCaves()
  >CausticCaves function works!
// End of CausticCaves function.

var angryShroom = [
  ["name", "Angry Shroom"],
  ["punchCounter", 0],
  ["punchCounterLimit", 1],
  ["punchFrame", 0],
  ["punchDuration", 59],
  ["shootCounter", 0],
  ["shooterCounterLimit", 3],
  ["shootFrame", 0],
  ["shootDuration", 7]
]

func AngryShroom()
  var self = angryShroom

  var punchCounter =
  ^ Get(self, "punchCounter")

  var punchCounterLimit =
  ^ Get(self, "punchCounterLimit")

  var punchDuration =
  ^ Get(self, "punchDuration")

  var shootCounter =
  ^ Get(self, "shootCounter")

  var shootCounterLimit =
  ^ Get(self, "shootCounterLimit")

  var shootDuration =
  ^ Get(self, "shootDuration")

  ? loc.stars > 3
    Set(self, "punchDuration", 49)
    Set(self, "shootCounterLimit", 5)

  ? loc.stars > 4 & loc.stars <= 10
    Set(self, "shootDuration", 9)

  ? foe.name = Get(self, "name")
    ? foe.state = 32 &
    ^ punchCounter < punchCounterLimit
      // Punch starting frames
      Set(self, "punchFrame", foe.time)

      ? foe.time = Get(self, "punchDuration")
        // Punch hit frame
        punchCounter = punchCounter + 1
        Set(self, "punchCounter", punchCounter)

    ? foe.state = 32 &
    ^ punchCounter = punchCounterLimit
      // Shoot starting frames
      Set(self, "shootFrame", foe.time)

      ? foe.time = shootDuration
        // Active bullet frame
        var shootCounter = shootCounter + 1
        Set(self, "shootCounter", shootCounter)

    ? foe.state = 33 &
    ^ punchCounter <= punchCounterLimit &
    ^ shootCounter = 0
      // Punch recovery frames
      Set(self, "punchRecoveryFrame", foe.time)

    ? foe.state = 33 &
    ^ punchCounter = punchCounterLimit &
    ^ shootCounter <= shootCounterLimit
      // Shoot recovery frames
      Set(self, "shootRecoveryFrame", foe.time)
  
    ? foe.state = 33 &
    ^ punchCounter = punchCounterLimit &
    ^ shootCounter = shootCounterLimit
      Set(self, "punchCounter", 0)
      Set(self, "shootCounter", 0)

func FungusForest()
  >FungusForest function works!

  ? foe.distance <= 22
    equipL poison wand dP
    equipR poison wand D

  ? foe.distance <= 7
    equip heavy_hammer
  
  // Dodging Mr.Puff's explosion
  ? foe = explode & foe.distance <= 4 
  ^ & Cooldown("mind") <= 0
    equipL mind

  ? loc = boss
    angryShroom = AngryShroom()

    >@Get(angryShroom, "name")@\n
    ^punchCounter: 
    ^@Get(angryShroom, "punchCounter")@\n
    ^punchCounterLimit: 
    ^@Get(angryShroom, "punchCounterLimit")@\n
    ^punchFrame: 
    ^@Get(angryShroom, "punchFrame")@\n
    ^punchDuration: 
    ^@Get(angryShroom, "punchDuration")@\n
    ^punchRecoveryFrame: 
    ^@Get(angryShroom, "punchRecoveryFrame")@\n
    ^shootCounter: 
    ^@Get(angryShroom, "shootCounter")@\n
    ^shootCounterLimit: 
    ^@Get(angryShroom, "shootCounterLimit")@\n
    ^shootFrame: 
    ^@Get(angryShroom, "shootFrame")@\n
    ^shootDuration: 
    ^@Get(angryShroom, "shootDuration")@\n
    ^shootRecoveryFrame: 
    ^@Get(angryShroom, "shootRecoveryFrame")@\n

// End of FungusForest function.

func UndeadCrypt()
  >UndeadCrypt function works!
  ? foe.distance <= 20
    equip socketed_staff ah
  ? foe.distance <= 10
  ^ & foe ! immune_to_physical
  ^ & Cooldown("quarterstaff") <= 0
    equip quarterstaff
    activate R
// End of UndeadCrypt function.

func BronzeMine()
  >BronzeMine function works!
// End of BronzeMine function.

func IcyRidge()
  >IcyRidge function works!
// End of IcyRidge function.

func Temple()
  >Temple function works!
// End of Temple function.

func Then()
  >Then function works!

  loadout 1

  ? hp < 10
    activate potion

  ? loc.id = rocky_plateau
    RockyPlateau()
  ? loc.id = deadwood_valley
    DeadwoodValley()
  ? loc.id = caustic_caves
    CausticCaves()
  ? loc.id = fungus_forest
    FungusForest()
  ? loc.id = undead_crypt
    UndeadCrypt()
  ? loc.id = bronze_mine
    BronzeMine()
  ? loc.id = icy_ridge
    IcyRidge()
  ? loc.id = temple
    Temple()

  ? pickup.distance <= 10
    equipL star

  ? pickup = treasure
    then = true
// End of Then function.

func Finally()
  >Finally function works!
  equipL star
  equipR triskelion
// End of Finally function.

func Main()
  >Main function works!
  ? toBegin = false
    return ToBegin()
  ? then = false
    return Then()
  ? finally = false
    return Finally()
// End of Main function.

Main()
